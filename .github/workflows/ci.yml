name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: anchorzup_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0'
    
    - name: Restore dependencies
      run: dotnet restore server/AnchorzUp.API/AnchorzUp.API.csproj
    
    - name: Build
      run: dotnet build server/AnchorzUp.API/AnchorzUp.API.csproj --no-restore
    
    - name: Test
      run: dotnet test server/AnchorzUp.API/AnchorzUp.API.csproj --no-build --verbosity normal
      env:
        ConnectionStrings__DefaultConnection: "Host=localhost;Database=anchorzup_test;Username=postgres;Password=postgres"

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
      working-directory: frontend
    
    - name: Build
      run: npm run build
      working-directory: frontend
    
    - name: Test
      run: npm test -- --coverage --watchAll=false
      working-directory: frontend

  build-and-deploy:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0'
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Build Backend
      run: |
        cd server/AnchorzUp.API
        dotnet publish -c Release -o ./publish
    
    - name: Build Frontend
      run: |
        cd frontend
        npm ci
        npm run build
    
    - name: Deploy to Production
      run: |
        echo "Deploying to production..."
        # Add your deployment commands here
        # Examples:
        # - Deploy to Azure App Service
        # - Deploy to AWS
        # - Deploy to Docker Hub
        # - Deploy to your hosting platform
